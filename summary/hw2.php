<?php

  // Задание: написать валидацию "формы" добавления книги на сайт
  // В качестве данных формы использоват переменны со СТРОКОВЫМИ значениями
  // Пункты со звездочкой * выполнять не обязательно. Если не получится самостоятельно, мы в любом случае реализуем их вместе на занятии.

  /**
   * Массив ошибок
   * В качестве ключей использовать название переменной 
   */
  $errors = [];

  /**
   * 1. Название книги (string)
   *    а  обрезать лишние пробелы слева и справа
   *    б  проверить что поле не пустое => Добавить ошибку "Обязательное поле"
   *    в* преобразовать все последовательности пробелов в один пробел: Например "Война      и  мир" => "Война и мир"
   */
  $title = "   Война   и  мир"; // "Пользовательский ввод". Меняйте это значение для тестирования вашей реализации. 
  $titleClean = ""; // В эту переменную нужно записать "очищеное" значение. Без лишних пробелов и т.д.


  // > Ваш код для валидации $title

  /**
   * 2. Автор (string)
   *    а  обрезать лишние пробелы слева и справа
   *    б  проверить что поле не пусое => Добавить ошибку "Обязательное поле"
   *    в* преобразовать все последовательности пробелов в один пробел: Например "Лев   Толстой" => "Лев Толстой"
   *    г* убедиться, что имена написаны с большой буквы: "лев толстой" => "Лев Толстой"
   */
  $author = "Лев толстой "; // "Пользовательский ввод". Меняйте это значение для тестирования вашей реализации. 
  $authorClean = ""; // В эту переменную нужно записать "очищеное" значение. Без лишних пробелов и т.д.

  // > Ваш код для валидации $author
  
  /**
   * 3. Год (int)
   *    а  обрезать лишние пробелы слева и справа
   *    б  поле не обязательное, поэтому следующие проверки делать только если есть значение
   *    в  проверить, что значение - целое число => Добавить ошибку "Год должен быть числом"
   *    г  преобразовать в число integer
   *    д  проверить, что год находится в промежутке от 1500 до 2020 => Добавить ошибку "Недопустимый год" 
   */
  $year = "1980"; // "Пользовательский ввод". Меняйте это значение для тестирования вашей реализации. 
  $yearClean = 0; // В эту переменную нужно записать "очищеное" значение, преобразованное в integer

  // Ваш код для валидации $year

  /**
   * 4. ISBN - муждународный код книги (string)
   * Это десятизначиный код, состоящий из 4 груп переменной длины разделенных дефисом. 
   * Первые три группы состоят только из цифр. Послденяя - один символ: цифра или X
   * Примеры: 0-8044-2957-X или 85-359-0277-5
   *    a  обрезать лишние пробелы слева и справа
   *    б  поле не обязательное, поэтому следующие проверки делать только если есть значение
   *    в  убрать лишние пробелы из середины строки, если имеются
   *    г  проверить, что код состоит ровно из 4 групп разделенных дефисом => Добавить ошибку "Неверный ISBN"
   *    д  проверить, что первые три групп состоят только из цифр => Добавить ошибку "Неверный ISBN"
   *    е  проверить, что последняя группа - это одна цифра или X => Добавить ошибку "Неверный ISBN"
   *    ж* заменить три вышеперечисленные проверки одним регулярным выражением => Добавить ошибку "Неверный ISBN"
   */
  $isbn = "0-8044-2957-X"; // "Пользовательский ввод". Меняйте это значение для тестирования вашей реализации. 
  $isbnClean = ""; // В эту переменную нужно записать "очищеное" значение. Без лишних пробелов и т.д.

  // Ваш код для валидации $isbn

  /**
   * 5. Доступна ли книга (bool)
   *    а  преобразовать в тип bool. Пустая строка - false, любая другая - true
   */
  $isAvailable = "1"; // "Пользовательский ввод". Меняйте это значение для тестирования вашей реализации. 
  $isAvailableClean = false; // В эту переменную нужно записать "очищеное" значение, преобразованное в bool


  // Ваш код для валидации $isAvailable


  // Результат валидации и нормализации ввода.
  // ! Этот код менять не нужно. Он выводи результат в наглядном виде

  $form = [
    [
      "Название",
      $title,
      $titleClean,
      @$errors['title']
    ],
    [
      "Автор",
      $author,
      $authorClean,
      @$errors['author']  
    ],
    [
      "Год издания",
      $year,
      $yearClean,
      @$errors['year']  
    ],
    [
      "ISBN",
      $isbn,
      $isbnClean,
      @$errors['isbn']  
    ],
    [
      "Доступно",
      $isAvailable,
      $isAvailableClean,
      @$errors['isAvailable']  
    ]
  ];
?>


<html>
<head>
  <style>

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    table {
      margin: 24px auto;
      border-spacing: 1px 4px;
      font: 16px sans-serif;
      width: 800px;
    }

    td {
      padding: 10px 6px;
    }

    .invalid td {
      background-color: hsl(10, 70%, 90%);
    }

    .valid td {
      background-color: hsl(120, 70%, 90%);
    }

    .name {
      width: 14%;
    }

    .value, .clean {
      width: 23%;
    }

    .error {
      width: 40%;
    }

  </style>
</head>
<body>
  <table>
  
    <tr>
      <td class="name">&nbsp;</td>
      <td class="value">Значение на входе</td>
      <td class="clean">Нормализованное</td>
      <td class="error">Ошибка</td>
    </tr>
    
    <?foreach ($form as [$name, $value, $clean, $error]) {?>
    
    <tr class="<?=$error ? "invalid" : "valid"?>">
      <td class="name"><?=$name?></td>
      <td class="value"><pre><?=var_export($value, true)?><pre></td>
      <td class="clean"><pre><?=var_export($clean, true)?><pre></td>
      <td class="error"><?=$error?></td>
    </tr>
    
    <?}?>
  </table>
</body>
</html>
